{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleee\\\\OneDrive\\\\Desktop\\\\Projects\\\\MyCineList\\\\frontend\\\\src\\\\utils\\\\MovieContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useMovies } from './useMovies';\nimport { useAuth } from \"./useAuth\";\nimport { getFavorites, addFavorite, deleteFavorite } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieContext = /*#__PURE__*/createContext();\nexport const MovieProvider = function ({\n  children\n}) {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [selectedId, setSelectedId] = useState(null);\n  const {\n    movies,\n    isLoading,\n    error\n  } = useMovies(query);\n  const [watched, setWatched] = useState([]);\n  const {\n    token\n  } = useAuth();\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (!token) return;\n      try {\n        const {\n          data\n        } = await getFavorites(token);\n        setWatched((data === null || data === void 0 ? void 0 : data.savedMovies) || data || []);\n      } catch (err) {\n        var _err$response;\n        console.error(\"Fetch error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      }\n    };\n    fetchFavorites();\n  }, [token]);\n  function handleSelectMovie(id) {\n    console.log(id);\n    setSelectedId(prev => id === prev ? null : id);\n  }\n  function handleCloseMovie() {\n    setSelectedId(null);\n  }\n  async function handleAddWatched(movie) {\n    try {\n      const addedMovie = await addFavorite(movie, token);\n      setWatched(prev => {\n        // Prevent duplicates\n        if (prev.some(m => m.imdbID === movie.imdbID)) {\n          return prev;\n        }\n        return [...prev, addedMovie || movie];\n      });\n    } catch (err) {\n      console.error(\"Failed to add movie:\", {\n        error: err,\n        movie: movie.imdbID\n      });\n      throw err;\n    }\n  }\n  async function handleDeleteWatched(movieOrId) {\n    try {\n      // 1. Extract ID safely\n      const imdbID = typeof movieOrId === 'string' ? movieOrId : movieOrId === null || movieOrId === void 0 ? void 0 : movieOrId.imdbID;\n\n      // 2. Validate ID format (basic IMDB ID pattern)\n      if (!imdbID || !/^tt\\d+$/.test(imdbID)) {\n        throw new Error(`Invalid movie ID format: ${imdbID}`);\n      }\n\n      // 3. Delete from backend\n      await deleteFavorite(imdbID, token);\n\n      // 4. Update state with proper checks\n      setWatched(prev => {\n        if (!Array.isArray(prev)) {\n          console.error(\"Watched state is not an array:\", prev);\n          return [];\n        }\n        const newWatched = prev.filter(m => {\n          if (!(m !== null && m !== void 0 && m.imdbID)) {\n            console.error(\"Invalid movie object in state:\", m);\n            return false;\n          }\n          return m.imdbID !== imdbID;\n        });\n        if (newWatched.length === prev.length) {\n          console.warn(`Movie ${imdbID} not found in watched list`);\n        }\n        return newWatched;\n      });\n    } catch (err) {\n      console.error(\"Delete failed:\", {\n        error: err.message,\n        input: movieOrId,\n        stack: err.stack\n      });\n      // Optional: Show user notification\n      alert(`Failed to delete: ${err.message}`);\n    }\n  }\n\n  // async function handleDeleteWatched(movie){\n  //   try{\n  //      await deleteFavorite(token, movie.imdbID);\n  //     setWatched((prev) => prev.filter((m) => m.imdbID !== movie.imdbID));\n  //   }catch(err) {\n  //     console.error(\"Failed to delete movie from watched\", err);\n  //   }\n  // }\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      query,\n      setQuery,\n      selectedId,\n      setSelectedId,\n      movies,\n      isLoading,\n      error,\n      watched,\n      handleSelectMovie,\n      handleCloseMovie,\n      handleAddWatched,\n      handleDeleteWatched\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieProvider, \"u70FEXFLCuy12bqmLUZ81gMvKXQ=\", false, function () {\n  return [useMovies, useAuth];\n});\n_c = MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useMovies","useAuth","getFavorites","addFavorite","deleteFavorite","jsxDEV","_jsxDEV","MovieContext","MovieProvider","children","_s","query","setQuery","selectedId","setSelectedId","movies","isLoading","error","watched","setWatched","token","fetchFavorites","data","savedMovies","err","_err$response","console","response","message","handleSelectMovie","id","log","prev","handleCloseMovie","handleAddWatched","movie","addedMovie","some","m","imdbID","handleDeleteWatched","movieOrId","test","Error","Array","isArray","newWatched","filter","length","warn","input","stack","alert","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aleee/OneDrive/Desktop/Projects/MyCineList/frontend/src/utils/MovieContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport {useMovies} from './useMovies';\r\nimport { useAuth } from \"./useAuth\";\r\n\r\nimport {getFavorites, addFavorite, deleteFavorite} from './api';\r\n\r\nexport const MovieContext = createContext();\r\n\r\n\r\nexport const MovieProvider = function({ children }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [selectedId, setSelectedId] = useState(null);\r\n\r\n const {movies,isLoading, error} = useMovies(query);\r\n const[watched, setWatched] = useState([]);\r\n const {token} = useAuth();\r\n\r\nuseEffect(() => {\r\n  const fetchFavorites = async () => {\r\n    if(!token) return;\r\n    \r\n    try {\r\n      const { data } = await getFavorites(token);\r\n      setWatched(data?.savedMovies || data || []); \r\n    } catch (err) {\r\n      console.error(\"Fetch error:\", err.response?.data || err.message);\r\n    }\r\n  };\r\n  fetchFavorites();\r\n}, [token]);\r\n\r\n  function handleSelectMovie(id){\r\n    console.log(id);\r\n    \r\n    setSelectedId((prev) => id === prev ? null : id);\r\n  }\r\n  function handleCloseMovie(){\r\n    setSelectedId(null);\r\n  }\r\n\r\nasync function handleAddWatched(movie) {\r\n  try {\r\n    const addedMovie = await addFavorite(movie, token);\r\n    \r\n    setWatched(prev => {\r\n      // Prevent duplicates\r\n      if (prev.some(m => m.imdbID === movie.imdbID)) {\r\n        return prev;\r\n     }\r\n      return [...prev, addedMovie || movie];\r\n    });\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to add movie:\", {\r\n      error: err,\r\n      movie: movie.imdbID\r\n    });\r\n    throw err;\r\n  }\r\n}\r\nasync function handleDeleteWatched(movieOrId) {\r\n  try {\r\n    // 1. Extract ID safely\r\n    const imdbID = typeof movieOrId === 'string' \r\n      ? movieOrId \r\n      : movieOrId?.imdbID;\r\n\r\n    // 2. Validate ID format (basic IMDB ID pattern)\r\n    if (!imdbID || !/^tt\\d+$/.test(imdbID)) {\r\n      throw new Error(`Invalid movie ID format: ${imdbID}`);\r\n    }\r\n\r\n    // 3. Delete from backend\r\n    await deleteFavorite(imdbID, token);\r\n\r\n    // 4. Update state with proper checks\r\n    setWatched(prev => {\r\n      if (!Array.isArray(prev)) {\r\n        console.error(\"Watched state is not an array:\", prev);\r\n        return [];\r\n      }\r\n\r\n      const newWatched = prev.filter(m => {\r\n        if (!m?.imdbID) {\r\n          console.error(\"Invalid movie object in state:\", m);\r\n          return false;\r\n        }\r\n        return m.imdbID !== imdbID;\r\n      });\r\n\r\n      if (newWatched.length === prev.length) {\r\n        console.warn(`Movie ${imdbID} not found in watched list`);\r\n      }\r\n\r\n      return newWatched;\r\n    });\r\n\r\n  } catch (err) {\r\n    console.error(\"Delete failed:\", {\r\n      error: err.message,\r\n      input: movieOrId,\r\n      stack: err.stack\r\n    });\r\n    // Optional: Show user notification\r\n    alert(`Failed to delete: ${err.message}`);\r\n  }\r\n}\r\n\r\n  // async function handleDeleteWatched(movie){\r\n  //   try{\r\n  //      await deleteFavorite(token, movie.imdbID);\r\n  //     setWatched((prev) => prev.filter((m) => m.imdbID !== movie.imdbID));\r\n  //   }catch(err) {\r\n  //     console.error(\"Failed to delete movie from watched\", err);\r\n  //   }\r\n  // }\r\n  return(\r\n    <MovieContext.Provider value={({\r\n        query,\r\n        setQuery,\r\n        selectedId,\r\n        setSelectedId,\r\n        movies,\r\n        isLoading,\r\n        error,\r\n        watched,\r\n        handleSelectMovie,\r\n        handleCloseMovie,\r\n        handleAddWatched,\r\n        handleDeleteWatched,\r\n    })}>\r\n        {children}\r\n    </MovieContext.Provider>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}