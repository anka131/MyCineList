{"ast":null,"code":"import axios from 'axios';\nconst API = axios.create({\n  baseURL: 'https://mycinelist-00b6.onrender.com/api'\n});\nexport const getFavorites = token => {\n  return API.get('/favorites', {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nexport const addFavorite = (movie, token) => {\n  return API.post('/favorites', movie, {\n    headers: {\n      Authorization: `Bearer ${token}`,\n      'Content-Type': 'application/json'\n    }\n  });\n};\nexport const deleteFavorite = (imdbID, token) => {\n  return API.delete(`/favorites/${imdbID}`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n};\nAPI.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  } else {\n    console.warn('No token available');\n  }\n  return config;\n});","map":{"version":3,"names":["axios","API","create","baseURL","getFavorites","token","get","headers","Authorization","addFavorite","movie","post","deleteFavorite","imdbID","delete","interceptors","request","use","config","localStorage","getItem","console","warn"],"sources":["C:/Users/aleee/OneDrive/Desktop/Projects/MyCineList/frontend/src/utils/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n\r\nconst API = axios.create({\r\n  baseURL: 'https://mycinelist-00b6.onrender.com/api' \r\n});\r\n\r\nexport const getFavorites = (token) => {\r\n  return API.get('/favorites', {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n};\r\nexport const addFavorite = (movie, token) => {\r\n  return API.post('/favorites', movie, {\r\n    headers: { \r\n      Authorization: `Bearer ${token}`,\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n};\r\n\r\nexport const deleteFavorite = (imdbID, token) => {\r\n  return API.delete(`/favorites/${imdbID}`, {\r\n    headers: { Authorization: `Bearer ${token}` }\r\n  });\r\n};\r\n\r\n\r\n\r\nAPI.interceptors.request.use(config => {\r\n  const token = localStorage.getItem('token');\r\n  \r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  } else {\r\n    console.warn('No token available');\r\n  }\r\n  \r\n  return config;\r\n});"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACvBC,OAAO,EAAE;AACX,CAAC,CAAC;AAEF,OAAO,MAAMC,YAAY,GAAIC,KAAK,IAAK;EACrC,OAAOJ,GAAG,CAACK,GAAG,CAAC,YAAY,EAAE;IAC3BC,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;AACD,OAAO,MAAMI,WAAW,GAAGA,CAACC,KAAK,EAAEL,KAAK,KAAK;EAC3C,OAAOJ,GAAG,CAACU,IAAI,CAAC,YAAY,EAAED,KAAK,EAAE;IACnCH,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK,EAAE;MAChC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ,CAAC;AAED,OAAO,MAAMO,cAAc,GAAGA,CAACC,MAAM,EAAER,KAAK,KAAK;EAC/C,OAAOJ,GAAG,CAACa,MAAM,CAAC,cAAcD,MAAM,EAAE,EAAE;IACxCN,OAAO,EAAE;MAAEC,aAAa,EAAE,UAAUH,KAAK;IAAG;EAC9C,CAAC,CAAC;AACJ,CAAC;AAIDJ,GAAG,CAACc,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMb,KAAK,GAAGc,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAIf,KAAK,EAAE;IACTa,MAAM,CAACX,OAAO,CAACC,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD,CAAC,MAAM;IACLgB,OAAO,CAACC,IAAI,CAAC,oBAAoB,CAAC;EACpC;EAEA,OAAOJ,MAAM;AACf,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}