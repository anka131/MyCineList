{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleee\\\\OneDrive\\\\Desktop\\\\Projects\\\\MyCineList\\\\frontend\\\\src\\\\utils\\\\MovieContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useMovies } from './useMovies';\nimport { useAuth } from \"./useAuth\";\nimport { getFavorites, addFavorite, deleteFavorite } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieContext = /*#__PURE__*/createContext();\nexport const MovieProvider = function ({\n  children\n}) {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [selectedId, setSelectedId] = useState(null);\n  const {\n    movies,\n    isLoading,\n    error\n  } = useMovies(query);\n  const [watched, setWatched] = useState([]);\n  const {\n    token\n  } = useAuth();\n  useEffect(() => {\n    const loadFavorites = async () => {\n      if (!token) return;\n      try {\n        const {\n          data\n        } = await getFavorites(token);\n        setWatched(data || []);\n      } catch (err) {\n        console.error(\"Failed to load favorites:\", err);\n      }\n    };\n    loadFavorites();\n  }, [token]);\n  function handleSelectMovie(id) {\n    setSelectedId(prev => id === prev ? null : id);\n  }\n  function handleCloseMovie() {\n    setSelectedId(null);\n  }\n  const handleAddWatched = async movie => {\n    try {\n      if (watched.some(m => m.imdbID === movie.imdbID)) {\n        console.warn(\"Movie already in watchlist\");\n        return;\n      }\n      const {\n        data\n      } = await addFavorite({\n        imdbID: movie.imdbID,\n        title: movie.title,\n        poster: movie.poster === \"N/A\" ? null : movie.poster,\n        imdbRating: movie.imdbRating ? Number(movie.imdbRating) : null,\n        userRating: movie.userRating ? Number(movie.userRating) : null,\n        runtime: movie.runtime ? Number(movie.runtime) : null\n      }, token);\n      setWatched(data);\n    } catch (err) {\n      var _err$response;\n      console.error(\"Failed to add movie:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      throw err;\n    }\n  };\n  const handleDeleteWatched = async imdbID => {\n    try {\n      // Frontend validation\n      if (!imdbID) {\n        throw new Error(\"No movie ID provided\");\n      }\n\n      // Optimistic update (remove immediately from UI)\n      setWatched(prev => prev.filter(movie => movie.imdbID !== imdbID));\n\n      // Backend deletion\n      const {\n        data\n      } = await deleteFavorite(imdbID, token);\n\n      // Sync with backend response (in case of conflicts)\n      setWatched(data);\n    } catch (err) {\n      var _err$response2;\n      console.error(\"Delete failed:\", {\n        error: ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data) || err.message,\n        movieId: imdbID\n      });\n\n      // Re-fetch to restore correct state\n      const {\n        data\n      } = await getFavorites(token);\n      setWatched(data);\n      throw err;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      query,\n      setQuery,\n      selectedId,\n      setSelectedId,\n      movies,\n      isLoading,\n      error,\n      watched,\n      handleSelectMovie,\n      handleCloseMovie,\n      handleAddWatched,\n      handleDeleteWatched\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieProvider, \"u70FEXFLCuy12bqmLUZ81gMvKXQ=\", false, function () {\n  return [useMovies, useAuth];\n});\n_c = MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useMovies","useAuth","getFavorites","addFavorite","deleteFavorite","jsxDEV","_jsxDEV","MovieContext","MovieProvider","children","_s","query","setQuery","selectedId","setSelectedId","movies","isLoading","error","watched","setWatched","token","loadFavorites","data","err","console","handleSelectMovie","id","prev","handleCloseMovie","handleAddWatched","movie","some","m","imdbID","warn","title","poster","imdbRating","Number","userRating","runtime","_err$response","response","message","handleDeleteWatched","Error","filter","_err$response2","movieId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aleee/OneDrive/Desktop/Projects/MyCineList/frontend/src/utils/MovieContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport {useMovies} from './useMovies';\r\nimport { useAuth } from \"./useAuth\";\r\n\r\nimport {getFavorites, addFavorite, deleteFavorite} from './api';\r\n\r\nexport const MovieContext = createContext();\r\n\r\n\r\nexport const MovieProvider = function({ children }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [selectedId, setSelectedId] = useState(null);\r\n\r\n const {movies,isLoading, error} = useMovies(query);\r\n const[watched, setWatched] = useState([]);\r\n const {token} = useAuth();\r\n\r\n  useEffect(() => {\r\n    const loadFavorites = async () => {\r\n      if (!token) return;\r\n      \r\n      try {\r\n        const { data } = await getFavorites(token);\r\n        setWatched(data || []);\r\n      } catch (err) {\r\n        console.error(\"Failed to load favorites:\", err);\r\n      }\r\n    };\r\n    \r\n    loadFavorites();\r\n  }, [token]);\r\n\r\n  function handleSelectMovie(id){\r\n    setSelectedId((prev) => id === prev ? null : id);\r\n  }\r\n  function handleCloseMovie(){\r\n    setSelectedId(null);\r\n  }\r\n\r\n const handleAddWatched = async (movie) => {\r\n    try {\r\n      if (watched.some(m => m.imdbID === movie.imdbID)) {\r\n        console.warn(\"Movie already in watchlist\");\r\n        return;\r\n      }\r\n\r\n      const { data } = await addFavorite(\r\n        {\r\n          imdbID: movie.imdbID,\r\n          title: movie.title,\r\n          poster: movie.poster === \"N/A\" ? null : movie.poster,\r\n      imdbRating: movie.imdbRating ? Number(movie.imdbRating) : null,\r\n      userRating: movie.userRating ? Number(movie.userRating) : null,\r\n      runtime: movie.runtime ? Number(movie.runtime) : null\r\n        }, \r\n        token\r\n      );\r\n      \r\n      setWatched(data);\r\n    } catch (err) {\r\n      console.error(\"Failed to add movie:\", err.response?.data || err.message);\r\n      throw err;\r\n    }\r\n  };\r\n\r\nconst handleDeleteWatched = async (imdbID) => {\r\n  try {\r\n    // Frontend validation\r\n    if (!imdbID) {\r\n      throw new Error(\"No movie ID provided\");\r\n    }\r\n\r\n    // Optimistic update (remove immediately from UI)\r\n    setWatched(prev => prev.filter(movie => movie.imdbID !== imdbID));\r\n\r\n    // Backend deletion\r\n    const { data } = await deleteFavorite(imdbID, token);\r\n    \r\n    // Sync with backend response (in case of conflicts)\r\n    setWatched(data);\r\n  } catch (err) {\r\n    console.error(\"Delete failed:\", {\r\n      error: err.response?.data || err.message,\r\n      movieId: imdbID\r\n    });\r\n    \r\n    // Re-fetch to restore correct state\r\n    const { data } = await getFavorites(token);\r\n    setWatched(data);\r\n    \r\n    throw err;\r\n  }\r\n};\r\n  return(\r\n    <MovieContext.Provider value={({\r\n        query,\r\n        setQuery,\r\n        selectedId,\r\n        setSelectedId,\r\n        movies,\r\n        isLoading,\r\n        error,\r\n        watched,\r\n        handleSelectMovie,\r\n        handleCloseMovie,\r\n        handleAddWatched,\r\n        handleDeleteWatched,\r\n    })}>\r\n        {children}\r\n    </MovieContext.Provider>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}