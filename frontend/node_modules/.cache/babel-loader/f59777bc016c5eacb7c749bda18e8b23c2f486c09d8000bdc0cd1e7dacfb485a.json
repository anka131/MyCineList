{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aleee\\\\OneDrive\\\\Desktop\\\\Projects\\\\MyCineList\\\\frontend\\\\src\\\\utils\\\\MovieContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport { useMovies } from './useMovies';\nimport { useAuth } from \"./useAuth\";\nimport { getFavorites, addFavorite, deleteFavorite } from './api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MovieContext = /*#__PURE__*/createContext();\nexport const MovieProvider = function ({\n  children\n}) {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [selectedId, setSelectedId] = useState(null);\n  const {\n    movies,\n    isLoading,\n    error\n  } = useMovies(query);\n  const [watched, setWatched] = useState([]);\n  const {\n    token\n  } = useAuth();\n  useEffect(() => {\n    const fetchFavorites = async () => {\n      if (!token) return;\n      try {\n        const {\n          data\n        } = await getFavorites(token);\n        setWatched((data === null || data === void 0 ? void 0 : data.savedMovies) || data || []);\n      } catch (err) {\n        var _err$response;\n        console.error(\"Fetch error:\", ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      }\n    };\n    fetchFavorites();\n  }, [token]);\n  function handleSelectMovie(id) {\n    setSelectedId(prev => id === prev ? null : id);\n  }\n  function handleCloseMovie() {\n    setSelectedId(null);\n  }\n  async function handleAddWatched(movie) {\n    try {\n      // Validate required fields before sending\n      if (!(movie !== null && movie !== void 0 && movie.imdbID) || !(movie !== null && movie !== void 0 && movie.title) || !(movie !== null && movie !== void 0 && movie.poster)) {\n        throw new Error(\"Missing required movie fields (imdbID, title, or poster)\");\n      }\n\n      // Prepare payload matching backend requirements\n      const payload = {\n        imdbID: movie.imdbID,\n        title: movie.title,\n        poster: movie.poster\n        // Add other optional fields if needed\n      };\n      console.log(\"Sending payload:\", payload); // Debug log\n\n      const response = await addFavorite(payload, token);\n      setWatched(prev => {\n        if (prev.some(m => m.imdbID === movie.imdbID)) {\n          console.warn(\"Movie already in watched list\");\n          return prev;\n        }\n        return [...prev, movie];\n      });\n    } catch (err) {\n      var _err$response2;\n      console.error(\"Add failed:\", {\n        error: err.message,\n        movieId: movie === null || movie === void 0 ? void 0 : movie.imdbID,\n        response: (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.data\n      });\n      throw err; // Re-throw for UI handling\n    }\n  }\n  async function handleDeleteWatched(imdbID) {\n    try {\n      await deleteFavorite(token, imdbID);\n      setWatched(prev => prev.filter(movie => movie.imdbID !== imdbID));\n    } catch (err) {\n      console.error(\"Failed to delete movie from watched\", err);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(MovieContext.Provider, {\n    value: {\n      query,\n      setQuery,\n      selectedId,\n      setSelectedId,\n      movies,\n      isLoading,\n      error,\n      watched,\n      handleSelectMovie,\n      handleCloseMovie,\n      handleAddWatched,\n      handleDeleteWatched\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieProvider, \"u70FEXFLCuy12bqmLUZ81gMvKXQ=\", false, function () {\n  return [useMovies, useAuth];\n});\n_c = MovieProvider;\nvar _c;\n$RefreshReg$(_c, \"MovieProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useMovies","useAuth","getFavorites","addFavorite","deleteFavorite","jsxDEV","_jsxDEV","MovieContext","MovieProvider","children","_s","query","setQuery","selectedId","setSelectedId","movies","isLoading","error","watched","setWatched","token","fetchFavorites","data","savedMovies","err","_err$response","console","response","message","handleSelectMovie","id","prev","handleCloseMovie","handleAddWatched","movie","imdbID","title","poster","Error","payload","log","some","m","warn","_err$response2","movieId","handleDeleteWatched","filter","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/aleee/OneDrive/Desktop/Projects/MyCineList/frontend/src/utils/MovieContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport {useMovies} from './useMovies';\r\nimport { useAuth } from \"./useAuth\";\r\n\r\nimport {getFavorites, addFavorite, deleteFavorite} from './api';\r\n\r\nexport const MovieContext = createContext();\r\n\r\n\r\nexport const MovieProvider = function({ children }) {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [selectedId, setSelectedId] = useState(null);\r\n\r\n const {movies,isLoading, error} = useMovies(query);\r\n const[watched, setWatched] = useState([]);\r\n const {token} = useAuth();\r\n\r\nuseEffect(() => {\r\n  const fetchFavorites = async () => {\r\n    if(!token) return;\r\n    \r\n    try {\r\n      const { data } = await getFavorites(token);\r\n      setWatched(data?.savedMovies || data || []); \r\n    } catch (err) {\r\n      console.error(\"Fetch error:\", err.response?.data || err.message);\r\n    }\r\n  };\r\n  fetchFavorites();\r\n}, [token]);\r\n\r\n  function handleSelectMovie(id){\r\n    setSelectedId((prev) => id === prev ? null : id);\r\n  }\r\n  function handleCloseMovie(){\r\n    setSelectedId(null);\r\n  }\r\n\r\nasync function handleAddWatched(movie) {\r\n  try {\r\n    // Validate required fields before sending\r\n    if (!movie?.imdbID || !movie?.title || !movie?.poster) {\r\n      throw new Error(\"Missing required movie fields (imdbID, title, or poster)\");\r\n    }\r\n\r\n    // Prepare payload matching backend requirements\r\n    const payload = {\r\n      imdbID: movie.imdbID,\r\n      title: movie.title,\r\n      poster: movie.poster\r\n      // Add other optional fields if needed\r\n    };\r\n\r\n    console.log(\"Sending payload:\", payload); // Debug log\r\n\r\n    const response = await addFavorite(payload, token);\r\n    \r\n    setWatched(prev => {\r\n      if (prev.some(m => m.imdbID === movie.imdbID)) {\r\n        console.warn(\"Movie already in watched list\");\r\n        return prev;\r\n      }\r\n      return [...prev, movie];\r\n    });\r\n\r\n  } catch (err) {\r\n    console.error(\"Add failed:\", {\r\n      error: err.message,\r\n      movieId: movie?.imdbID,\r\n      response: err.response?.data\r\n    });\r\n    throw err; // Re-throw for UI handling\r\n  }\r\n}\r\n  async function handleDeleteWatched(imdbID){\r\n    try{\r\n       await deleteFavorite(token, imdbID);\r\n      setWatched((prev) => prev.filter((movie) => movie.imdbID !== imdbID));\r\n    }catch(err) {\r\n      console.error(\"Failed to delete movie from watched\", err);\r\n    }\r\n  }\r\n  return(\r\n    <MovieContext.Provider value={({\r\n        query,\r\n        setQuery,\r\n        selectedId,\r\n        setSelectedId,\r\n        movies,\r\n        isLoading,\r\n        error,\r\n        watched,\r\n        handleSelectMovie,\r\n        handleCloseMovie,\r\n        handleAddWatched,\r\n        handleDeleteWatched,\r\n    })}>\r\n        {children}\r\n    </MovieContext.Provider>\r\n  )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}